@startuml
'https://plantuml.com/class-diagram

class FreightNetworkUI{


}
class ImportFromDataBase{

+getContainersByShipPortType(String shipIMO, String portID, String type)
+getPositionOfContainer(String containerID)
+getOccupancyRateByCargoManifest(String code, String cargo_manifest)
+getOccupancyRateByDate(String code, String date)
+getAllCountries()
+getCountryBorders(Country country, List<Country> countries)
+getCountryByName(String name, List<Country> countries)
+getPortByID(String id)
+getPortFromCountry(String country)
+wrapLinkedHashMap(LinkedHashMap<Port, Double> linkedHashMap, Port port)
+getDistanceBetweenPorts(Port port1, Port port2)
+ getPossibleConnections(Port port)
+getRouteOfContainer(String containerID, String clientReg)
+getEstimateOfContainersLeaving()
+getOccupancyRateOfEachWarehouse()
+getOccupancyRateOfEachWarehouse(int month)
+addCargoManifestContainer(int cargoManifestID, int containerID, int posx, int posy, int posz)
+addCargoManifest(int vehicleId, String warehouseId, String base_date_time, String type)

}


class FreightNetworkController{
-matrix
-vertices
+getCountries()
 + getDistanceBetweenPortCapital(Port port, Country country)
 +  getDistanceBetweenCapitals(Country c1, Country c2)
 +  indexOfObject(List<Object> vertices, Object o)
+ getVertices()
+  insertInMatrix( vertices,  matrix,  n)
+  build(int n)
 +  shortestPathBetweenVertices( l,  place1,  place2) {
 +   print( puzzle,  vertices)
  +  getVertByName( name)
  +  connectPortToCountryPorts( port,  matrix,  vertices){
 +  connectPortToNClosestPorts( port,  matrix, vertices,  n){
   + getMatrix()
}

FreightNetworkUI  ..>FreightNetworkController
FreightNetworkController ..> ImportFromDataBase
@enduml